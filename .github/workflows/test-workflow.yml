name: Continuous Integration

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master
  create:
    tags:
      - 'v[0-9].[0-9].[0-9]+*'
  # schedule:
  #   - cron:  '* * * * *'

env:
  DOCKER_BUILDKIT: 1

jobs:

  test-matrix:
    name: Test Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            path: Dockerfile
            target: local
            image: test:${{ github.job }}
          - os: ubuntu-18.04
            dockerfile: DockerfilePlus
            target: local
            image: test-plus:latest
    steps:
      - name: Test
        run: |
          echo ${{ matrix.path }}
          echo ${{ matrix.target }}
          echo ${{ matrix.image }}

  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    if: (github.event_name == 'schedule' && github.repository == '${{ github.repository }}')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      # - name: Docker test
      #   run: docker build -t test-app:latest -f build/Dockerfile .
      - name: Docker test
        run: docker images
      # - name: Docker test
      #   run: docker run --name test-app -d -p 3000:3000 test-app:latest
      # - name: Docker test
      #   run: docker ps
      # - name: Docker exec
      #   run: docker exec test-app ps
      # - name: Curl
      #   run: curl localhost:3000
      # - name: Unit Tests
      #   run: |
      #     go test ./...
      #     go version
      # - name: Build Image
      #   uses: docker/build-push-action@v1
      #   with:
      #     repository: ${{ secrets.MY_DOCKER_USER }}/docker-images/gotest
      #     dockerfile: build/Dockerfile
      #     path: '.'
      #     tag_with_sha: true
      #     push: false
      - name: Retrieve Tag
        id: get_version
        run: echo ::set-output name=GIT_TAG::$(echo ${GITHUB_REF/refs\/tags\//} | tr -d v)
      - name: NotifyIfFailedMaster
        if: failure() && github.ref == 'refs/heads/master'
        run: echo Notification Here

  publish:
    name: Publish Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'create' && contains(github.ref, 'refs/tags/')
    # if: github.event_name == 'create' && contains(github.ref, 'refs/tags/')
    # if: github.event.push.tags && contains(github.ref, 'release') # If working on a release branch
    # if: github.event.label.name == '<label_name>'                 # If particular label is set
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Retrieve Tag
        id: get_version
        run: echo ::set-output name=GIT_TAG::$(echo ${GITHUB_REF/refs\/tags\//} | tr -d v)
      - name: Push Image
        uses: docker/build-push-action@v1
        with:
          repository: ${{ secrets.MY_DOCKER_USER }}/docker-images/gotest
          dockerfile: build/Dockerfile
          path: '.'
          username: ${{ secrets.MY_DOCKER_USER }}
          password: ${{ secrets.MY_DOCKER_PASSWORD }}
          registry: ${{ secrets.MY_DOCKER_REGISTRY }}
          tag_with_ref: false
          tags: ${{ steps.get_version.outputs.GIT_TAG }},latest
          push: true

  testJob:
    name: Always
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: TestJob
        run: echo "I always run!"

  # For slack notifications and stuff
  testJobFail:
    name: OnlyIfFailed
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: TestJobWhenFailed
        run: echo "Execute when something fails!"